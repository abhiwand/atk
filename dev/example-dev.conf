//
// This is an example of dev.conf
//
// Copy this file and modify it for your local system
//
// Example Usage:
//     export EXTRA_CONF=.  # or other path to dev.conf
//     bin/api-server.sh -Dconfig.resource=dev.conf
//


include "application"

intel.analytics {
  api {
    port = 9099
  }
  engine {
    fs {
      root = "hdfs://localhost/data"
    }
    spark {
      // When master is empty the system defaults to spark://`hostname`:7070 where hostname is calculated from the current system
      master = ""
      // When home is empty the system will check expected locations on the local system and use the first one it finds
      // ("/usr/lib/spark","/opt/cloudera/parcels/CDH/lib/spark/", etc)
      home = ""

      // in cluster mode, set master and home like the example
      // home = "/opt/cloudera/parcels/CDH/lib/spark"
      // home = "/usr/lib/spark"

      // local mode
      // master = "local[4]"

      // path to python worker execution, usually to toggle 2.6 and 2.7
      //pythonWorkerExec = "python2.7"
      pythonWorkerExec = "python"

      conf {
        properties {
          // These key/value pairs will be parsed dynamically and provided to SparkConf()
          // See Spark docs for possible values http://spark.apache.org/docs/0.9.0/configuration.html
          // All values should be convertible to Strings

          // Memory should be same or lower than what is listed as available in Cloudera Manager
          //spark.executor.memory = "16g"
          spark.executor.memory = "8g"
        }
      }
    }
  }
  metastore {
    connection {
      // H2 is a in-memory Java database useful for testing
      url = "jdbc:h2:mem:iatest;DB_CLOSE_DELAY=-1"
      driver = "org.h2.Driver"
      username = "" // leave blank, no user or password is needed for H2
      password = "" // leave blank, no user or password is needed for H2

      // PostgreSQL is an open source database that comes with Cloudera
      //url = "jdbc:postgresql://localhost:5432/metastore"
      //driver = "org.postgresql.Driver"
      //username = "metastore"
      //password = "Tribeca123"
    }
  }
}

intel.analytics.engine {
  titan {
    load {
      // documentation for these settings is available on Titan website
      storage {
        // with clusters the hostname should be a comma separated list of host names with zookeeper role assigned
        hostname = "localhost"
	  }
	}
  }
}