//////////////////////////////////////////////////////////////////////////////
// INTEL CONFIDENTIAL
//
// Copyright 2015 Intel Corporation All Rights Reserved.
//
// The source code contained or described herein and all documents related to
// the source code (Material) are owned by Intel Corporation or its suppliers
// or licensors. Title to the Material remains with Intel Corporation or its
// suppliers and licensors. The Material may contain trade secrets and
// proprietary and confidential information of Intel Corporation and its
// suppliers and licensors, and is protected by worldwide copyright and trade
// secret laws and treaty provisions. No part of the Material may be used,
// copied, reproduced, modified, published, uploaded, posted, transmitted,
// distributed, or disclosed in any way without Intel's prior express written
// permission.
//
// No license under any patent, copyright, trade secret or other intellectual
// property right is granted to or conferred upon you by disclosure or
// delivery of the Materials, either expressly, by implication, inducement,
// estoppel or otherwise. Any license under such intellectual property rights
// must be express and approved by Intel in writing.
//////////////////////////////////////////////////////////////////////////////

package com.intel.intelanalytics.domain

import org.joda.time.DateTime

/**
 * Users of the system.
 *
 * @param id unique id auto-generated by the database
 * @param username unique name identifying this user
 * @param apiKey API key used to authenticate this user, None means user is disabled.
 * @param createdOn date/time this record was created
 * @param modifiedOn date/time this record was last modified
 */
case class User(id: Long,
                username: Option[String],
                apiKey: Option[String],
                createdOn: DateTime,
                modifiedOn: DateTime) extends HasId {

  require(id >= 0, "id must be greater than or equal to zero")
  require(username != null, "username must not be null")
  require(apiKey != null, "api key must not be null")

  if (apiKey.isDefined) {
    require(!apiKey.get.isEmpty)
  }
}
