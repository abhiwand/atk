intel.analytics.component.archives {
  model-plugins {
    parent = "engine-core"
    config-path = "plugins.model-plugins"
  }
}

plugins.model-plugins {

  //extra-classpath = [${intel.analytics.engine.hbase.configuration.path}, ${intel.analytics.engine.hadoop.configuration.path}]

  command {
    available = [
      "models.kmeansnewplugin",
      "models.kmeanspredictplugin",
      "models.kmeanstrainplugin",
      "models.linearregressionwithsgdnewplugin",
      "models.linearregressionwithsgdpredictplugin",
      "models.linearregressionwithsgdtrainplugin",
      "models.logisticregressionwithsgdnewplugin",
      "models.logisticregressionwithsgdpredictplugin",
      "models.logisticregressionwithsgdtestplugin",
      "models.logisticregressionwithsgdtrainplugin",
      "models.rename_model",
      "models.svmwithsgdplugin",
      "models.svmwithsgdpredictplugin",
      "models.svmwithsgdtestplugin",
      "models.svmwithsgdtrainplugin"
    ]

    models {

      kmeansnewplugin {
        class = "org.apache.spark.mllib.ia.plugins.clustering.KMeansNewPlugin"
        config {
        }
      }

      kmeanspredictplugin {
        class = "org.apache.spark.mllib.ia.plugins.clustering.KMeansPredictPlugin"
        config {
        }
      }

      kmeanstrainplugin {
        class = "org.apache.spark.mllib.ia.plugins.clustering.KMeansTrainPlugin"
        config {
        }
      }

      linearregressionwithsgdnewplugin {
        class = "org.apache.spark.mllib.ia.plugins.classification.LinearRegressionWithSGDNewPlugin"
        config {
        }
      }

      linearregressionwithsgdpredictplugin {
        class = "org.apache.spark.mllib.ia.plugins.classification.LinearRegressionWithSGDPredictPlugin"
        config {
        }
      }

      linearregressionwithsgdtrainplugin {
        class = "org.apache.spark.mllib.ia.plugins.classification.LinearRegressionWithSGDTrainPlugin"
        config {
        }
      }

      logisticregressionwithsgdnewplugin {
        class = "org.apache.spark.mllib.ia.plugins.classification.LogisticRegressionWithSGDNewPlugin"
        config {
        }
      }

      logisticregressionwithsgdpredictplugin {
        class = "org.apache.spark.mllib.ia.plugins.classification.LogisticRegressionWithSGDPredictPlugin"
        config {
        }
      }

      logisticregressionwithsgdtestplugin {
        class = "org.apache.spark.mllib.ia.plugins.classification.LogisticRegressionWithSGDTestPlugin"
        config {
        }
      }

      logisticregressionwithsgdtrainplugin {
        class = "org.apache.spark.mllib.ia.plugins.classification.LogisticRegressionWithSGDTrainPlugin"
        config {
        }
      }

      rename_model {
        class = "com.intel.intelanalytics.engine.spark.model.plugins.RenameModelPlugin"
        config {
        }
      }

      svmwithsgdplugin {
        class = "org.apache.spark.mllib.ia.plugins.classification.SVMWithSGDPlugin"
        config {
        }
      }

      svmwithsgdpredictplugin {
        class = "org.apache.spark.mllib.ia.plugins.classification.SVMWithSGDPredictPlugin"
        config {
        }
      }

      svmwithsgdtestplugin {
        class = "org.apache.spark.mllib.ia.plugins.classification.SVMWithSGDTestPlugin"
        config {
        }
      }

      svmwithsgdtrainplugin {
        class = "org.apache.spark.mllib.ia.plugins.classification.SVMWithSGDTrainPlugin"
        config {
        }
      }

    }
  }
  queries {
    available = []
  }
}

#included so that conf file can be read during unit tests,
#these will not be used when the application is actually running
intel.analytics.engine {
  default-timeout = 30
  titan {}
}