intel.analytics.component.archives {
  igiraph-titan {
    config-path = "intel.analytics.igiraph-titan"
  }
}

intel.analytics.igiraph-titan {
  command {
    available = ["graphs.ml.loopy_belief_propagation", "graphs.ml.alternating_least_squares", "graphs.ml.conjugate_gradient_descent", "graphs.ml.label_propagation", "graphs.ml.latent_dirichlet_allocation"]
    graphs {
      ml {
        loopy_belief_propagation {
          class = "com.intel.intelanalytics.algorithm.graph.LoopyBeliefPropagation"
          config {
            fs = ${intel.analytics.engine.fs}
            default-timeout = ${intel.analytics.engine.default-timeout}
            giraph = ${intel.analytics.engine.giraph}
            titan = ${intel.analytics.engine.titan}
            output {
              dir = "lbp"
              overwrite = "true"
            }
            giraph {
              lbp.maxSuperSteps = 10
              lbp.convergenceThreshold = 0
              lbp.anchorThreshold = 0.9
              lbp.bidirectionalCheck = false
              lbp.power = 0.5
              lbp.smoothing = 2.0
              lbp.ignoreVertexType = false
            }
          }
        }

        alternating_least_squares {
          class = "com.intel.intelanalytics.algorithm.graph.AlternatingLeastSquares"
          config {
            fs = ${intel.analytics.engine.fs}
            default-timeout = ${intel.analytics.engine.default-timeout}
            giraph = ${intel.analytics.engine.giraph}
            titan = ${intel.analytics.engine.titan}
            output {
              dir = "als"
              overwrite = "true"
            }
            giraph {
              als.maxSuperSteps = 20
              als.convergenceThreshold = 0
              als.lambda = 0.065f
              als.featureDimension = 3
              als.learningCurveOutputInterval = 1
              als.bidirectionalCheck = false
              als.biasOn = false
              als.maxVal = "Infinity"
              als.minVal = "-Infinity"
            }
          }
        }

        conjugate_gradient_descent {
          class = "com.intel.intelanalytics.algorithm.graph.ConjugateGradientDescent"
          config {
            fs = ${intel.analytics.engine.fs}
            default-timeout = ${intel.analytics.engine.default-timeout}
            giraph = ${intel.analytics.engine.giraph}
            titan = ${intel.analytics.engine.titan}
            output {
              dir = "cgd"
              overwrite = "true"
            }
            giraph {
              cgd.maxSuperSteps = 20
              cgd.convergenceThreshold = 0
              cgd.lambda = 0.065f
              cgd.featureDimension = 3
              cgd.learningCurveOutputInterval = 1
              cgd.bidirectionalCheck = false
              cgd.biasOn = false
              cgd.maxVal = "Infinity"
              cgd.minVal = "-Infinity"
              cgd.numCGDIters = 5
            }
          }
        }

        latent_dirichlet_allocation {
          class = "com.intel.intelanalytics.algorithm.graph.LatentDirichletAllocation"
          config {
            fs = ${intel.analytics.engine.fs}
            default-timeout = ${intel.analytics.engine.default-timeout}
            giraph = ${intel.analytics.engine.giraph}
            titan = ${intel.analytics.engine.titan}
            output {
              dir = "lda"
              overwrite = "true"
            }
            giraph {
              lda.maxSuperSteps = 20
              lda.alpha = 0.1
              lda.beta = 0.1
              lda.convergenceThreshold = 0
              lda.evaluateCost = false
              lda.bidirectionalCheck = false
              lda.maxVal = "Infinity"
              lda.minVal = "-Infinity"
              lda.numTopics = 10
            }
          }
        }


        label_propagation {
          class = "com.intel.intelanalytics.algorithm.graph.LabelPropagation"
          config {
            fs = ${intel.analytics.engine.fs}
            default-timeout = ${intel.analytics.engine.default-timeout}
            giraph = ${intel.analytics.engine.giraph}
            titan = ${intel.analytics.engine.titan}
            output {
              dir = "lp"
              overwrite = "true"
            }
          }
        }
      }
    }
  }
}


#included so that conf file can be read during unit tests,
#these will not be used when the application is actually running
intel.analytics.engine {
  default-timeout = 30s
  titan {}
}
