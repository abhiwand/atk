intel.taproot.analytics.component.archives {
  model-plugins {
    parent = "engine-core"
    config-path = "plugins.model-plugins"
  }
}

plugins.model-plugins {

  //extra-classpath = [${intel.taproot.analytics.engine.hbase.configuration.path}, ${intel.taproot.analytics.engine.hadoop.configuration.path}]

  command {
    available = [
      "models.kmeansnewplugin",
      "models.kmeanspredictplugin",
      "models.kmeanstrainplugin",
      "models.linearregressionwithsgdnewplugin",
      "models.linearregressionwithsgdpredictplugin",
      "models.linearregressionwithsgdtrainplugin",
      "models.naivebayesnewplugin",
      "models.naivebayestrainplugin",
      "models.naivebayespredictplugin",
      "models.rename_model",
      "models.svmwithsgdnewplugin",
      "models.svmwithsgdpredictplugin",
      "models.svmwithsgdtestplugin",
      "models.svmwithsgdtrainplugin",
      "models.logisticregressionnewplugin",
      "models.logisticregressiontrainplugin",
      "models.logisticregressiontestplugin",
      "models.logisticregressionpredictplugin"
      "models.svmwithsgdtrainplugin",
      "models.LibSvmNewPlugin",
      "models.LibSvmTrainPlugin",
      "models.LibSvmScorePlugin",
      "models.LibSvmTestPlugin",
      "models.LibSvmPredictPlugin",
      "models.principalcomponentsnewplugin",
      "models.principalcomponentstrainplugin",
      "models.principalcomponentspredictplugin"
    ]

    models {

      LibSvmPredictPlugin {
        class = "com.intel.taproot.analytics.libSvmPlugins.LibSvmPredictPlugin"
        config {
        }
      }

      LibSvmNewPlugin {
        class = "com.intel.taproot.analytics.libSvmPlugins.LibSvmNewPlugin"
        config {
        }
      }

      LibSvmTrainPlugin {
        class = "com.intel.taproot.analytics.libSvmPlugins.LibSvmTrainPlugin"
        config {
        }
      }

      LibSvmScorePlugin {
        class = "com.intel.taproot.analytics.libSvmPlugins.LibSvmScorePlugin"
        config {
        }
      }

      LibSvmTestPlugin {
        class = "com.intel.taproot.analytics.libSvmPlugins.LibSvmTestPlugin"
        config {
        }
      }

      kmeansnewplugin {
        class = "org.apache.spark.mllib.atk.plugins.clustering.KMeansNewPlugin"
        config {
        }
      }

      kmeanspredictplugin {
        class = "org.apache.spark.mllib.atk.plugins.clustering.KMeansPredictPlugin"
        config {
        }
      }

      kmeanstrainplugin {
        class = "org.apache.spark.mllib.atk.plugins.clustering.KMeansTrainPlugin"
        config {
        }
      }

      linearregressionwithsgdnewplugin {
        class = "org.apache.spark.mllib.atk.plugins.classification.LinearRegressionWithSGDNewPlugin"
        config {
        }
      }

      linearregressionwithsgdpredictplugin {
        class = "org.apache.spark.mllib.atk.plugins.classification.LinearRegressionWithSGDPredictPlugin"
        config {
        }
      }

      linearregressionwithsgdtrainplugin {
        class = "org.apache.spark.mllib.atk.plugins.classification.LinearRegressionWithSGDTrainPlugin"
        config {
        }
      }

      naivebayesnewplugin {
        class = "org.apache.spark.mllib.atk.plugins.classification.NaiveBayesNewPlugin"
        config {
        }
      }

      naivebayespredictplugin {
        class = "org.apache.spark.mllib.atk.plugins.classification.NaiveBayesPredictPlugin"
        config {
        }
      }

      naivebayestrainplugin {
        class = "org.apache.spark.mllib.atk.plugins.classification.NaiveBayesTrainPlugin"
        config {
        }
      }

      principalcomponentsnewplugin {
        class = "org.apache.spark.mllib.atk.plugins.dimensionalityreduction.PrincipalComponentsNewPlugin"
        config {
        }
      }

      principalcomponentstrainplugin {
        class = "org.apache.spark.mllib.atk.plugins.dimensionalityreduction.PrincipalComponentsTrainPlugin"
        config {
        }
      }

      principalcomponentspredictplugin {
        class = "org.apache.spark.mllib.atk.plugins.dimensionalityreduction.PrincipalComponentsPredictPlugin"
        config {
        }
      }

      rename_model {
        class = "com.intel.taproot.analytics.engine.model.plugins.RenameModelPlugin"
        config {
        }
      }

      svmwithsgdnewplugin {
        class = "org.apache.spark.mllib.atk.plugins.classification.SVMWithSGDNewPlugin"
        config {
        }
      }

      svmwithsgdpredictplugin {
        class = "org.apache.spark.mllib.atk.plugins.classification.SVMWithSGDPredictPlugin"
        config {
        }
      }

      svmwithsgdtestplugin {
        class = "org.apache.spark.mllib.atk.plugins.classification.SVMWithSGDTestPlugin"
        config {
        }
      }

      svmwithsgdtrainplugin {
        class = "org.apache.spark.mllib.atk.plugins.classification.SVMWithSGDTrainPlugin"
        config {
        }
      }

      logisticregressionnewplugin {
        class = "org.apache.spark.mllib.atk.plugins.classification.glm.LogisticRegressionNewPlugin"
        config {
        }
      }

      logisticregressiontrainplugin {
        class = "org.apache.spark.mllib.atk.plugins.classification.glm.LogisticRegressionTrainPlugin"
        config {
        }
      }

      logisticregressiontestplugin {
        class = "org.apache.spark.mllib.atk.plugins.classification.glm.LogisticRegressionTestPlugin"
        config {
        }
      }

      logisticregressionpredictplugin {
        class = "org.apache.spark.mllib.atk.plugins.classification.glm.LogisticRegressionPredictPlugin"
        config {
        }
      }

    }
  }
  queries {
    available = []
  }
}

#included so that conf file can be read during unit tests,
#these will not be used when the application is actually running
intel.taproot.analytics.engine {
  default-timeout = 30
  titan {}
}