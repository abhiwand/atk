<!-- * Copyright (C) 2013 Intel Corporation.
 *     All rights reserved.
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 * For more about this software visit:
 *      http://www.01.org/GraphBuilder
 *-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.intel.hadoop.graphbuilder</groupId>
	<artifactId>graphbuilder</artifactId>
	<version>2.0-alpha</version>
	<properties>
		<hamcrest.version>1.3</hamcrest.version>
		<json.path.version>1.8.1</json.path.version>
		<powermock.version>1.5.1</powermock.version>
		<tinkerpop.version>2.4.0</tinkerpop.version>
		<minidev.version>1.1.1</minidev.version>
		<commons.cli.version>1.2</commons.cli.version>
		<commons.collections.version>3.1</commons.collections.version>
		<jena.version>2.11.0</jena.version>
		<log4j.version>1.2.17</log4j.version>
		<junit.version>4.11</junit.version>
		<groovy.version>2.1.2</groovy.version>
		<mrunit.version>1.0.0</mrunit.version>
		<mockito.version>1.9.5</mockito.version>
		<java.sizeof.version>0.0.4</java.sizeof.version>
		<titan.version>0.4.2</titan.version>
	</properties>

	<!-- We currently support two build profiles: Apache Hadoop 1.2 (active 
		by default) and Intel Distribution for Hadoop (IDH) 3 -->
	<profiles>
		<profile>
			<id>idh_3</id>
			<properties>
				<hadoop.version>2.0.4-alpha</hadoop.version>
				<pig.version>0.11.1</pig.version>
				<pigunit.version>0.11.1</pigunit.version>
				<hbase.version>0.94.7</hbase.version>
				<java.version>1.6</java.version>
				<titan.core.artifact>titan-core-jre6</titan.core.artifact>
				<titan.hbase.artifact>titan-hbase-jre6</titan.hbase.artifact>
				<mrunit.classifier>hadoop2</mrunit.classifier>
				<titan.berkeleyje.artifact>titan-berkeleyje-jre6</titan.berkeleyje.artifact>
				<slf4j.version>1.7.5</slf4j.version>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-install-plugin</artifactId>
						<version>2.5.1</version>
						<executions>
							<execution>
								<id>install-titan-core-jre6</id>
								<phase>initialize</phase>
								<goals>
									<goal>install-file</goal>
								</goals>
								<configuration>
									<file>${basedir}\lib\titan-core-jre6-0.4.2.jar</file>
									<groupId>com.thinkaurelius.titan</groupId>
									<artifactId>${titan.core.artifact}</artifactId>
									<version>${titan.version}</version>
									<pomFile>${basedir}\lib\titan-core-0.4.2.pom</pomFile>
								</configuration>
							</execution>
							<execution>
								<id>install-titan-hbase-jre6</id>
								<phase>initialize</phase>
								<goals>
									<goal>install-file</goal>
								</goals>
								<configuration>
									<file>${basedir}\lib\titan-hbase-jre6-0.4.2.jar</file>
									<groupId>com.thinkaurelius.titan</groupId>
									<artifactId>${titan.hbase.artifact}</artifactId>
									<version>${titan.version}</version>
								</configuration>
							</execution>
							<execution>
								<id>install-titan-berkeleyje-jre6</id>
								<phase>initialize</phase>
								<goals>
									<goal>install-file</goal>
								</goals>
								<configuration>
									<file>${basedir}\lib\titan-berkeleyje-jre6-0.4.2.jar</file>
									<groupId>com.thinkaurelius.titan</groupId>
									<artifactId>${titan.berkeleyje.artifact}</artifactId>
									<version>${titan.version}</version>
									<pomFile>${basedir}\lib\titan-berkeleyje-0.4.1.pom</pomFile>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
			<dependencies>
				<dependency>
					<groupId>org.apache.hadoop</groupId>
					<artifactId>hadoop-common</artifactId>
					<version>${hadoop.version}</version>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>org.apache.hadoop</groupId>
					<artifactId>hadoop-mapreduce-client-core</artifactId>
					<version>${hadoop.version}</version>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-api</artifactId>
					<version>${slf4j.version}</version>
				</dependency>
				<dependency>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-log4j12</artifactId>
					<version>${slf4j.version}</version>
					<scope>test</scope>
				</dependency>				
			</dependencies>
		</profile>
		<profile>
			<id>hadoop_1.2</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<hadoop.version>1.2.1</hadoop.version>
				<pig.version>0.12.0</pig.version>
				<pigunit.version>0.12.0</pigunit.version>
				<hbase.version>0.94.12</hbase.version>
				<java.version>1.7</java.version>
				<titan.core.artifact>titan-core</titan.core.artifact>
				<titan.hbase.artifact>titan-hbase</titan.hbase.artifact>
				<titan.berkeleyje.artifact>titan-berkeleyje</titan.berkeleyje.artifact>
				<mrunit.classifier>hadoop1</mrunit.classifier>
			</properties>
			<dependencies>
				<dependency>
					<groupId>org.apache.hadoop</groupId>
					<artifactId>hadoop-core</artifactId>
					<version>${hadoop.version}</version>
					<scope>provided</scope>
				</dependency>
			</dependencies>
		</profile>
	</profiles>

	<build>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.2.1</version>
				<executions>
					<execution>
						<goals>
							<goal>exec</goal>
						</goals>
					</execution>
				</executions>
				<!-- mvn exec:exec will generate the doxygen documentation -->
				<configuration>
					<executable>doxygen</executable>
					<arguments>
						<argument>docs/Doxyfile</argument>
					</arguments>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>1.7</version>
				<executions>
					<execution>
						<id>add-source</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>demoapps</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.12</version>
				<configuration>
					<forkMode>always</forkMode>
				</configuration>
			</plugin>
			<!-- plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<executions>
					<execution>
						<id>jar-with-deps</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<descriptors>
						<descriptor>src/main/assembly/gb-assembly.xml</descriptor>
					</descriptors>
				</configuration>
			</plugin-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.8</version>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/lib</outputDirectory>
							<overWriteIfNewer>true</overWriteIfNewer>
						</configuration>
					</execution>
				</executions>
			</plugin>			
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.mojo
										</groupId>
										<artifactId>
											build-helper-maven-plugin
										</artifactId>
										<versionRange>
											[1.7,)
										</versionRange>
										<goals>
											<goal>add-test-source</goal>
											<goal>add-source</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-dependency-plugin
										</artifactId>
										<versionRange>
											[2.1,)
										</versionRange>
										<goals>
											<goal>
												copy-dependencies
											</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<dependencies>
		<dependency>
			<groupId>com.thinkaurelius.titan</groupId>
			<artifactId>${titan.core.artifact}</artifactId>
			<version>${titan.version}</version>
		</dependency>
		<dependency>
			<groupId>com.thinkaurelius.titan</groupId>
			<artifactId>${titan.hbase.artifact}</artifactId>
			<version>${titan.version}</version>
			<exclusions>
				<exclusion>
					<artifactId>hadoop-core</artifactId>
					<groupId>org.apache.hadoop</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.hbase</groupId>
			<artifactId>hbase</artifactId>
			<version>${hbase.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>net.minidev</groupId>
			<artifactId>json-smart</artifactId>
			<version>${minidev.version}</version>
		</dependency>
		<dependency>
			<groupId>commons-cli</groupId>
			<artifactId>commons-cli</artifactId>
			<version>${commons.cli.version}</version>
		</dependency>
		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
			<version>${commons.collections.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.pig</groupId>
			<artifactId>pig</artifactId>
			<version>${pig.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.thinkaurelius.faunus</groupId>
			<artifactId>faunus</artifactId>
			<version>${titan.version}</version>
			<scope>runtime</scope>
			<exclusions>
				<exclusion>
					<groupId>com.thinkaurelius.titan</groupId>
					<artifactId>titan-core</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.thinkaurelius.titan</groupId>
					<artifactId>titan-hbase</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.jena</groupId>
			<artifactId>apache-jena-libs</artifactId>
			<type>pom</type>
			<version>${jena.version}</version>
		</dependency>
		<dependency>
			<groupId>com.carrotsearch</groupId>
			<artifactId>java-sizeof</artifactId>
			<version>${java.sizeof.version}</version>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>${log4j.version}</version>
			<scope>provided</scope>
		</dependency>

		<!-- 
		     ************************************************
		     Below dependencies are required during testing
		     ************************************************
		-->
		<dependency>
			<groupId>org.apache.pig</groupId>
			<artifactId>pigunit</artifactId>
			<version>${pigunit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.mrunit</groupId>
			<artifactId>mrunit</artifactId>
			<version>${mrunit.version}</version>
			<classifier>${mrunit.classifier}</classifier>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>1.9.5</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.thinkaurelius.titan</groupId>
			<artifactId>${titan.berkeleyje.artifact}</artifactId>
			<version>${titan.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.jayway.restassured</groupId>
			<artifactId>json-path</artifactId>
			<version>${json.path.version}</version>
			<exclusions>
				<!-- Exclude Groovy because of a compatibility issue -->
				<exclusion>
					<groupId>org.codehaus.groovy</groupId>
					<artifactId>groovy</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-module-junit4</artifactId>
			<version>${powermock.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-api-mockito</artifactId>
			<version>${powermock.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<repositories>
		<repository>
			<id>info-bliki-repository</id>
			<url>http://gwtwiki.googlecode.com/svn/maven-repository/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>central-repo</id>
			<name>Maven Repository Switchboard</name>
			<layout>default</layout>
			<url>http://repo.maven.apache.org/maven2</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>central-repo1</id>
			<name>Maven Repository Switchboard</name>
			<layout>default</layout>
			<url>http://repo1.maven.org/maven2</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>

	<pluginRepositories>
		<pluginRepository>
			<id>central</id>
			<name>Maven Plugin Repository</name>
			<url>http://repo1.maven.org/maven2</url>
			<layout>default</layout>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<releases>
				<updatePolicy>never</updatePolicy>
			</releases>
		</pluginRepository>
	</pluginRepositories>
</project>