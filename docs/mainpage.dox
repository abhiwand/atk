/*! \mainpage 
 *
 * <H2>Overview</H2>
 * \todo NEED AN OVERVIEW
 * Graph Builder 2.0 (alpha) is a library of Pig UDFs (user defined functions) enabling users to 
 * construct graphs from structured, semi-structured and unstructured data.
 * 
 * <H2>Release Notes</H2>
 * - fixed bugs: ...
 * - new features on top of GB 1.0: ...
 * - Several UDFs for graph ETL and a macro for bulk loading the <a href="http://thinkaurelius.github.io/titan/">Titan graph database:</a>
	 * - <B>Raw Data Input</B> 
	 *      <UL>
	 *		<LI> \link com.intel.pig.udf.eval.ExtractJSONField ExtractJSONField \endlink Provides a convenient way of processing complex JSON documents using <a href="https://code.google.com/p/rest-assured/">JSONPath</a> queries.
	 *      <LI> \link com.intel.pig.load.XMLLoader XMLLoader \endlink Provides a fix for reducing the memory footprint of <a href="https://cwiki.apache.org/confluence/display/PIG/PiggyBank">Piggy Bank</a>'s XMLLoader.
	 *      </UL>
	 * - <B>Graph Construction</B> 
	 *      <UL>
	 *	    <LI> \link com.intel.pig.udf.eval.CreatePropGraphElements CreatePropGraphElements \endlink Creates \link com.intel.pig.data.PropertyGraphElement PropertyGraphElements \endlink 
	 *       from raw input given vertex and edge tokenization rules. 
	 *      </UL> 
	 * - <B>Filters:</B> 
	 *      <UL> 
	 *	    <LI> Dedup Vertices, Dedup edges
	 *      </UL>  
	 * - <B>Storage:</B> 
	 *      <UL> 
	 *	    <LI> \link com.intel.pig.udf.eval.TORDF TORDF \endlink Constructs RDF triples from property graph elements.
	 *      <LI> Text
	 *      <LI> \link intel_gb2.pig LOAD_TITAN \endlink Loads a graph from a given HBase table to the Titan graph database.
	 *      </UL> 
	 * - <B>Misc:</B>
	 *      <UL>  
	 *      <LI>  \link com.intel.pig.udf.eval.CreateRowKey CreateRowKey \endlink Generates a row key that 
	 *      <a href="http://pig.apache.org/docs/r0.12.0/api/org/apache/pig/backend/hadoop/hbase/HBaseStorage.html">HBaseStorage</a> 
	 *      class needs when storing data to an HBase table by applying the MD5 hash function to a given tuple's elements.
	 *      </UL> 
 * 
 * <H2>Building The Source Code</H2>
 * GB 2.0 (alpha) requires <a href="http://www.oracle.com/technetwork/java/javase/downloads/index.html">Java</a>, <a href="http://hadoop.apache.org/">Hadoop</a>,
 * <a href="http://pig.apache.org/">Pig</a>, <a href="http://hbase.apache.org/">HBase (required for the LOAD_TITAN macro)</a> and <a href="http://thinkaurelius.github.io/titan/">Titan graph database</a>. 
 * In particular GB 2.0 (alpha) has been tested against Java 1.7, Hadoop 1.2.1, Pig 0.12, Hbase 0.94.12, and Titan 0.4.0. In addition, <a href="http://maven.apache.org/">Maven</a> is required to build GB 2.0 (alpha).
 * You can build GB with
 \code
 mvn clean package 
 \endcode
 * and graphbuilder-2.0-alpha-with-deps.jar will be created under the target directory. In order to skip unit tests during the build
 \code
 mvn clean package -DskipTests 
 \endcode
 
 *Finally, to generate the documentation
  \code
 mvn exec:exec
 \endcode
 * <H2>Using GB 2.0 (alpha)</H2>
 *  To use GB 2.0 (alpha) UDFs, in your Pig script REGISTER graphbuilder-2.0-alpha-with-deps.jar and IMPORT \link intel_gb2.pig \endlink script. The 
 * \link intel_gb2.pig \endlink script defines the ExtractJSONField and CreateRowKey UDFs (the UDFs that take no constructor arguments) and LOAD_TITAN macros. The user
 * has to define the other UDFs with the constructor arguments they want; see Tutorial for examples.
 *  Assuming GB 2.0 (alpha) is installed at /usr/local/gb/ add the following to the beginning of your Pig script:
    \code
     REGISTER /usr/local/gb/target/graphbuilder-2.0-alpha-with-deps.jar;
     IMPORT '/usr/local/gb/pig/intel_gb2.pig';
    \endcode
 * 
 * <H2>Known Issues:</H2>
 *  <B>Using DUMP to print property graph elements fails</B><BR/>
 *  Using Pig's DUMP command to dump property graph elements causes "ERROR org.apache.pig.tools.grunt.Grunt - ERROR 2998: Unhandled internal error. java.io.IOException: 
 *  Could not find class com.intel.hadoop.graphbuilder.graphelements.PropertyGraphElementStringTypeVids, while attempting to de-serialize it". To fix the problem,
 *  in $HADOOP_HOME/conf/hadoop-env.sh file update the line that exports HADOOP_CLASSPATH and add "$PIG_HOME/pig-0.12.0.jar:$GB_HOME/target/graphbuilder-2.0-alpha-with-deps.jar" 
 *  to the end of this classpath definition ($PIG_HOME and $GB_HOME are the paths Pig and GB are installed)
 * 
 */
