# THIS IS THE SHARED configuration file. You must use another configuration file
# that imports this one. This file is missing many installation-specific settings such as
# the application key, database connection information, etc.
# DO NOT add sensitive or environment-specific information to this file!
     test="random123"
# This is the main configuration file for the application.
# ~~~~~
application.secret="Gjg::it2i>C94uueWJFCFiySk<ocVE7vB>XjtbiqNNl@byA`3cu[aDpe?std919d"

# The application languages
# ~~~~~
application.langs="en"


# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/),
# by providing an application-logger.xml file in the conf directory.

# Root logger:
logger.root=ERROR

# Logger used by the framework:
logger.play=INFO

# Logger provided to your application:
logger.application=DEBUG

dev{
    socksProxyHost = proxy-socks.jf.intel.com
    socksProxyPort = 1080
    http.proxyHost = proxy.jf.intel.com
    http.proxyPort = 911
    https.proxyHost = proxy.jf.intel.com
    https.proxyPort = 911
}
ipython{
    cookieDomain = ".us-west-2.compute.amazonaws.com"
    url = "https://ec2-50-112-190-134.us-west-2.compute.amazonaws.com:9443"
    secret = "ajk235;9tt4h32314-15u43hnkdfvdzs;gu943*HF)EFEJ__HFE*(P%^&%DEJ"
}
aws{
    account_id = "arn:aws:iam::953196509655:user/IntelAnalytics_Web",
    secret_access_key = "e/W/CmuKKWOKcd6jtVDSDI8Namj9ZBK2+eLnN458",
    access_key = "AKIAIYNYHBUVNWTJ6LOA",
    region = "https://sqs.us-west-2.amazonaws.com",
    S3{
        policyVersion = "2008-10-17"
        bucket = gaopublic
        bucketPrefix = "gao"
        bucketUploadPrefix = "user/"
        bucket_expiration_policy = 604800000
        bucket_max_file_size = 5368709120
        principalIds = ["arn:aws:iam::953196509655:user/IntelAnalytics_Web","arn:aws:iam::953196509655:user/IntelAnalytics_User"]
        permissions = ["PutBucketLogging", "ListBucketVersions","PutBucketPolicy","DeleteBucket", "PutBucketWebsite",
        "GetBucketRequestPayment", "ListBucket", "PutBucketVersioning", "GetBucketLogging", "GetBucketPolicy",
        "GetBucketVersioning", "PutBucketAcl", "GetBucketNotification", "GetBucketAcl", "PutBucketNotification",
        "PutLifecycleConfiguration", "DeleteBucketPolicy","DeleteBucketWebsite", "ListBucketMultipartUploads",
        "GetLifecycleConfiguration", "PutBucketRequestPayment", "GetBucketLocation", "GetBucketWebsite"]
        cors = [
                {
                    origin = "https://localhost"
                    methods = ["GET", "PUT", "POST"]
                    allowedHeaders = ["*"]
                    exposedHeaders = []
                }
                {
                    origin = "https://localhost:9443"
                    methods = ["GET", "PUT", "POST"]
                    allowedHeaders = ["*"]
                    exposedHeaders = []
                }
                {
                    origin = "http://localhost"
                    methods = ["GET", "PUT", "POST"]
                    allowedHeaders = ["*"]
                    exposedHeaders = []
                }
                {
                     origin = "http://localhost:9000"
                     methods = ["GET", "PUT", "POST"]
                     allowedHeaders = ["*"]
                     exposedHeaders = []
                }
                {
                     origin = "https://ec2-54-200-245-95.us-west-2.compute.amazonaws.com"
                     methods = ["GET", "PUT", "POST"]
                     allowedHeaders = ["*"]
                     exposedHeaders = []
                }
                {
                     origin = "http://ec2-54-200-245-95.us-west-2.compute.amazonaws.com"
                     methods = ["GET", "PUT", "POST"]
                     allowedHeaders = ["*"]
                     exposedHeaders = []
                }
                {
                     origin = "http://ec2-54-201-17-123.us-west-2.compute.amazonaws.com "
                     methods = ["GET", "PUT", "POST"]
                     allowedHeaders = ["*"]
                     exposedHeaders = []
                }
               ]
    }
    SQS{
        principalIds = ["arn:aws:iam::953196509655:user/IntelAnalytics_Web","arn:aws:iam::953196509655:user/IntelAnalytics_User"]
        endPoint = "https://sqs.us-west-2.amazonaws.com"
        policyVersion = "2008-10-17"
        users = [
                    {
                     accountId = "arn:aws:iam::953196509655:user/IntelAnalytics_Web"
                     secretAccessKey = "e/W/CmuKKWOKcd6jtVDSDI8Namj9ZBK2+eLnN458"
                     accessKey = "AKIAIYNYHBUVNWTJ6LOA"
                    }
                    {
                     accountId = "arn:aws:iam::953196509655:user/IntelAnalytics_User"
                     secretAccessKey = "h57vzrHg18IRdGUGnRvfSph381VtuEOfK+r3oNBQ"
                     accessKey = "AKIAJ65RQRJONMKNT2NQ"
                    }
                ]
        permissions = ["SQS:SendMessage", "SQS:GetQueueAttributes","SQS:ReceiveMessage", "SQS:DeleteMessage", "SQS:ChangeMessageVisibility", "SQS:GetQueueAttributes", "SQS:GetQueueUrl"]
    }
}
oauth{
    google{
        secret = "0fp9P9isYAz_vrlyA9I1Jk_j"
        client_id = "141308260505-jf332k2mi49jggi2cugf08vk17u9s9rk.apps.googleusercontent.com"
        token_verify_url = "https://www.googleapis.com/oauth2/v1/tokeninfo"
        user_info_url = "https://www.googleapis.com/oauth2/v1/userinfo"
        api_key = "AIzaSyDmHQWYcBofoq5Rar89Zu09Wq5EzltGmxM"
        scope = "https://www.googleapis.com/auth/plus.me https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/userinfo.email"
    }
}
session{
    cookie.name = "SESSIONID"
    cookie.timeout = 28800
}

db.default.driver=org.h2.Driver
db.default.url="jdbc:h2:mem:play;MODE=MYSQL"
slick.default="models.database.*"
