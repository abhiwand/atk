//////////////////////////////////////////////////////////////////////////////
// INTEL CONFIDENTIAL
//
// Copyright 2015 Intel Corporation All Rights Reserved.
//
// The source code contained or described herein and all documents related to
// the source code (Material) are owned by Intel Corporation or its suppliers
// or licensors. Title to the Material remains with Intel Corporation or its
// suppliers and licensors. The Material may contain trade secrets and
// proprietary and confidential information of Intel Corporation and its
// suppliers and licensors, and is protected by worldwide copyright and trade
// secret laws and treaty provisions. No part of the Material may be used,
// copied, reproduced, modified, published, uploaded, posted, transmitted,
// distributed, or disclosed in any way without Intel's prior express written
// permission.
//
// No license under any patent, copyright, trade secret or other intellectual
// property right is granted to or conferred upon you by disclosure or
// delivery of the Materials, either expressly, by implication, inducement,
// estoppel or otherwise. Any license under such intellectual property rights
// must be express and approved by Intel in writing.
//////////////////////////////////////////////////////////////////////////////

package com.intel.intelanalytics.domain

import org.joda.time.DateTime

// TODO: this class is not yet used but there will be a table for storing Hooks like this in the DB

/**
 * An instance of a Hook execution.
 *
 * Every time a Hook callback is attempted a new HookExecution is created whether
 * the result is success or failure.
 *
 * @param id unique id auto-generated by the database identifying this hookExecution
 * @param hookId unique id identifying the hook this execution belongs to
 * @param success true if this hook execution was successful (2xx response code)
 * @param responseCode the HTTP response code received when this hook execution was attempted. -1 means no response code.
 * @param errorBody the body of the HTTP response if an error was received (convenience for debugging purposes)
 * @param createdOn date/time this record was created
 * @param modifiedOn date/time this record was last modified
 */
@deprecated("hooks were planned but then we still haven't implemented after several months", "12-03-2014")
case class HookExecution(id: Long, hookId: Long, success: Boolean = false, responseCode: Int = -1, errorBody: Option[String] = None, createdOn: DateTime, modifiedOn: DateTime) extends HasId {

}
